{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","changeContact","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","onSubmit","event","preventDefault","label","htmlFor","input","type","value","onChange","currentTarget","id","pattern","required","btnAdd","ContactList","contacts","deleteFunction","renderContacts","map","contactsListItem","onClick","btnDelete","contactsList","Filter","filter","handleChange","filterInputId","initialContacts","App","setContacts","setFilter","isFirstRender","useRef","useEffect","current","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","normalizeFilter","toLowerCase","includes","getFiltered","find","contact","alert","newContact","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfe462af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1bY-h\",\"label\":\"Filter_label__3ciPt\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (<section className={styles.section}><h1 className={styles.title}>{title}</h1>\r\n    {children}</section>\r\n    )\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport { useState } from \"react\";\r\nimport { nanoid } from 'nanoid';\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nconst ContactForm = ({ changeContact }) => { \r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n\r\n\r\nconst handleNameChange = (event) => {\r\n    const {  value } = event.currentTarget;\r\n\r\n    setName( value );\r\n  };\r\n\r\n\r\n  const handleNumberChange = (event) => {\r\n    const { value } = event.currentTarget;\r\n\r\n    setNumber(value);\r\n  };\r\nconst nameInputId = nanoid();\r\nconst numberInputId = nanoid();\r\n    \r\n    \r\nconst addContact = (event) => {\r\n        event.preventDefault();\r\n\r\n        changeContact(name, number);\r\n    \r\n\r\n    setName( \"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\nreturn (<>\r\n            <form onSubmit={addContact}>\r\n                <label className={styles.label} htmlFor={nameInputId}>Name\r\n                    <input className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleNameChange}\r\n                        id={nameInputId}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        required\r\n                    /></label>\r\n                <label className={styles.label} htmlFor={numberInputId}>Number\r\n                    <input className={styles.input}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        onChange={handleNumberChange}\r\n                        id={numberInputId}\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        required\r\n                    /></label>\r\n                <button className={styles.btnAdd} type=\"submit\">Add contact</button>\r\n            </form>\r\n        </>);\r\n    };\r\n\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    changeContact: PropTypes.func.isRequired\r\n}","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteFunction }) => {\r\n    const renderContacts = contacts.map(({id, name, number}) => (\r\n        <li key={name} className={styles.contactsListItem}>{name} {number}\r\n        <button onClick={() => deleteFunction(id)} className={styles.btnDelete} >X</button>\r\n        </li>\r\n        \r\n        ))\r\n\r\n    return ( \r\n        <ul className={styles.contactsList}>\r\n            {renderContacts }</ul>)\r\n}\r\nexport default ContactList;\r\n\r\nconst contactShape = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape(contactShape)).isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ filter, handleChange,filterInputId }) => {\r\n  \r\n\r\n  return (\r\n      <>\r\n        <label className={styles.label} htmlFor={filterInputId}>Find contacts by name\r\n          <input className={styles.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handleChange}\r\n            id={filterInputId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          /></label>\r\n      </>)\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange:PropTypes.func.isRequired\r\n}","\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { nanoid } from 'nanoid';\n\nimport Section from './components/Section';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\"\n\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n\n];\n\nconst App = () => {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState(\"\")\n  const isFirstRender = useRef(true);\n\n\n  const filterInputId = nanoid();\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      const contacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(contacts);\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n    , [contacts]);\n\n\n  const changeContact = (name, number) => {\n    if (contacts.find((contact) => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    })) {\n      alert(name + \" is already in contacts.\");\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number\n    };\n    setContacts(prevState => {\n      return ([...prevState, newContact]\n      );\n    })\n  };\n\n  const handleContactChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    setContacts({ [name]: value });\n  };\n\n\n  const handleFilterChange = (event) => {\n    const { value } = event.currentTarget;\n\n    setFilter(value);\n  };\n\n\n  const deleteContact = (contactId) => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId)\n    );\n  };\n\n  const getFiltered = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizeFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const normalizeName = name.toLowerCase();\n      const result = normalizeName.includes(normalizeFilter);\n      return result;\n    })\n\n    return filteredContacts;\n  }\n  const filteredContacts = getFiltered();\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm handleChange={handleContactChange} changeContact={changeContact} />\n      </Section>\n      <Section title='Contacts'>\n        <Filter filter={filter} handleChange={handleFilterChange} filterInputId={filterInputId} />\n        <ContactList contacts={filteredContacts} deleteFunction={deleteContact}\n        />\n\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3owqz\",\"input\":\"ContactForm_input__bnIT1\",\"btnAdd\":\"ContactForm_btnAdd__1NLTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactList_contactsListItem__DOtUp\",\"btnDelete\":\"ContactList_btnDelete__39Y5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2clQ_\",\"title\":\"Section_title__2RoP8\"};"],"sourceRoot":""}